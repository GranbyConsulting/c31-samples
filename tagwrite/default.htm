<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<%Include /stdhead.htm%>
</head>
<body>
	<%Include /stdnavbar.htm%>
	<%NoCache%>
	<div class="container" role="main">
		<div class="page-header">
			<h1>Sample Page</h1>
		</div>
		<div class="row">
			<div class="col-md-6">
				<form>
					<table class='table'>
						<thead>
							<tr><th>Tag Data</th><th>New Value</th></tr>
						</thead>
						<tbody>
							<tr>
							<td style="vertical-align:middle" id="showTag1"><%=Tags.Tag1%></td>
							<td><input class="form-control" id="inputTag1" placeholder="Enter new value"><td>
							</tr>
							<tr>
							<td style="vertical-align:middle" id="showTag2"><%=Tags.Tag2%></td>
							<td><input class="form-control" id="inputTag2" placeholder="Enter new value"><td>
							</tr>
							<tr>
							<td style="vertical-align:middle" id="showTag3"><%=Tags.Tag3%></td>
							<td><input class="form-control" id="inputTag3" placeholder="Enter new value"><td>
							</tr>
							<tr>
							<td style="vertical-align:middle" id="showTag4"><%=Tags.Tag4%></td>
							<td><input class="form-control" id="inputTag4" placeholder="Enter new value"><td>
							</tr>
						</tbody>
					</table>
					<button id="commit" type="button" class="btn btn-default">Commit</button>
				</form>
			</div>
		</div>
		<div id="alert-placeholder" style="width: 80%; padding-top: 25px">
	</div>
</body>
<script type="text/javascript">

var tag;   // Tag to write

var write; // Did we change anything?

function doDocument() {

	// This function is called when the document is ready
	// by virtue of $(document).ready call right at the bottom
	// of this script. We call Crimson's default handler and
	// then bind our Commit button to the code below.

	doSession();
	
	$("#commit").on("click", function (e) { submitData(); });
}

function submitData() {

	// We are potentially going to submit all four data fields,
	// so we start at the first one, clear the flag that says
	// that we changed something, and start the write process.

	tag   = 0;
	
	write = 0;
	
	submitField();
	}
	
function submitField() {

	// Find the IDs of the elements that contain
	// the current tag value and the new value.

	var sid = "#showTag"  + (tag + 1);

	var iid = "#inputTag" + (tag + 1);
	
	// Read the new value.

	var val = $(iid).val();
	
	if (val == "") {
	
		// If it is empty, skip to the next tag.
	
		submitNext();
	}
	else {
	
		// Otherwise, we are going to submit an AJAX request
		// to write the tag value, so allocate the request and
		// compose the URL per the Crimson requirements. Note
		// that we're using data page 2 and indexing the tags
		// that it lists. It's important that these tags match
		// the ones defined in the HTML above.

		var xhr = new XMLHttpRequest();

		var url = "/ajax/dataview-write.htm?page=2&tag=" + tag + "&data=\"" + val + "\"" + cacheBreaker();
		
		xhr.open("GET", url, true);

		xhr.onload = function () {
		
			// If the request completes, check the return code.

			if (xhr.status == 200) {
			
				// If it is 200, the write did not fail.
			
				if (xhr.response.length) {
				
					// If the response is non-empty, we actually changed
					// something, so set the flag to indicate this and copy
					// the new data into the current data. This is actually
					// a bit lazy, as we should ideally fire off another
					// request to get the formatted result. This is left as
					// an exercise for the reader!
				
					write = 1;
			
					$(sid).html(val);
				}
				
				// Clear the input box.
				
				$(iid).val("");
				
				// And move on to the next tag.

				submitNext();
			}
			else {
			
				// If we didn't get 200, show the error message.

				alertShow("alert-danger", "Error", xhr.response);
			}
		};

		xhr.onerror = function () {
		
			// If the request failed, show the error message.

			alertShow("alert-danger", "Error", "Failed to send write to server.");
		};
		
		// Send the request to the server.

		xhr.send(null);
	}
}

function submitNext() {

	// This function is called to submit the next tag,
	// either because the current tag is not being changed,
	// or because the tag was changed successfully.
	
	if (++tag == 4) {
	
		// We get here if we have processed all the tags.
	
		if ( write ) {
		
			// If we changed anything, show a message to that effect.
		
			alertShow("alert-success", "Success", "The tag values were written as requested.");
		}
	}
	else {
	
		// Submit the next tag in turn.
	
		submitField();
	}
}

function alertHide() {

	// Hide the alert message that we displayed.

	clearTimeout(timeout);

	$("#alertdiv").remove();
}

function alertShow(coloring, tagword, message) {

	// Show an alert message at the appropriate placeholder for 2.5 seconds.

	$("#alert-placeholder").html( "<div id='alertdiv' class='alert " + coloring + " alert-dismissable'>" +
								  "<a href='#' class='close' data-dismiss='alert' aria-label='close'>&times;</a>" +
								  "<span><strong>" + tagword + "!</strong> " + message + "</span></div>"
								  );

	timeout = setTimeout(alertHide, 2500);
}

</script>
<script type="text/javascript">$(document).ready(doDocument);</script>
</html>
